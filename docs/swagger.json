{
    "swagger": "2.0",
    "info": {
        "description": "PhoenixUptime Backend API",
        "title": "PhoenixUptime API",
        "contact": {},
        "version": "1.0"
    },
    "host": "127.0.0.1:3031",
    "basePath": "/",
    "paths": {
        "/account/change-password": {
            "post": {
                "security": [
                    {
                        "ApiKeyHeader": []
                    },
                    {
                        "ApiKeyQuery": []
                    }
                ],
                "description": "Allows an authenticated user to change their password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Change User Password",
                "parameters": [
                    {
                        "description": "Password change data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PasswordChangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "schema": {
                            "$ref": "#/definitions/api.PasswordChangeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing API key",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - incorrect current password",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/account/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyHeader": []
                    },
                    {
                        "ApiKeyQuery": []
                    }
                ],
                "description": "Returns basic information about the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get User Information",
                "responses": {
                    "200": {
                        "description": "user basic information",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized - invalid or missing API key",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/account/reset-api-key": {
            "post": {
                "security": [
                    {
                        "ApiKeyHeader": []
                    },
                    {
                        "ApiKeyQuery": []
                    }
                ],
                "description": "Resets the API key for the authenticated user and returns the new API key.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Reset API Key",
                "responses": {
                    "200": {
                        "description": "new API key",
                        "schema": {
                            "$ref": "#/definitions/api.ResetAPIKeyResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized - invalid or missing API key",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/account/settings": {
            "get": {
                "security": [
                    {
                        "ApiKeyHeader": []
                    },
                    {
                        "ApiKeyQuery": []
                    }
                ],
                "description": "Returns SMTP and Telegram bot settings for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get User Settings",
                "responses": {
                    "200": {
                        "description": "user settings",
                        "schema": {
                            "$ref": "#/definitions/api.SettingsResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized - invalid or missing API key",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/account/settings/smtp": {
            "post": {
                "security": [
                    {
                        "ApiKeyHeader": []
                    },
                    {
                        "ApiKeyQuery": []
                    }
                ],
                "description": "Updates the SMTP settings for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Update SMTP Settings",
                "parameters": [
                    {
                        "description": "SMTP settings",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateSMTPSettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "settings updated",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "invalid input",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized - invalid or missing API key",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/account/settings/telegram": {
            "post": {
                "security": [
                    {
                        "ApiKeyHeader": []
                    },
                    {
                        "ApiKeyQuery": []
                    }
                ],
                "description": "Updates the Telegram bot settings for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Update Telegram Bot Settings",
                "parameters": [
                    {
                        "description": "Telegram bot settings",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateTelegramBotRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "settings updated",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "invalid input",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized - invalid or missing API key",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check if the API is healthy",
                "tags": [
                    "Health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "status and message",
                        "schema": {
                            "$ref": "#/definitions/api.HealthCheckResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Logs in a user with username and password, returning an API key if successful.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "User login data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user successfully logged in",
                        "schema": {
                            "$ref": "#/definitions/api.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "invalid login payload",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Allows a new user to sign up, but only one user can exist.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Signup",
                "parameters": [
                    {
                        "description": "User signup data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SignupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User successfully created",
                        "schema": {
                            "$ref": "#/definitions/api.SignupResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Signup not allowed if a user already exists",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.HealthCheckResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                }
            }
        },
        "api.LoginResponse": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.PasswordChangeRequest": {
            "type": "object",
            "required": [
                "current_password",
                "new_password"
            ],
            "properties": {
                "current_password": {
                    "type": "string",
                    "minLength": 6
                },
                "new_password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "api.PasswordChangeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.ResetAPIKeyResponse": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.SettingsResponse": {
            "type": "object",
            "properties": {
                "smtp_settings": {
                    "$ref": "#/definitions/models.SMTPSettings"
                },
                "telegram_bot": {
                    "$ref": "#/definitions/models.TelegramBot"
                }
            }
        },
        "api.SignupRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "username": {
                    "description": "Username must be between 3 to 20 characters long, allowing only alphanumeric characters,\nunderscores, and hyphens. It is required and should be unique.",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                }
            }
        },
        "api.SignupResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.UpdateSMTPSettingsRequest": {
            "type": "object",
            "required": [
                "from_address",
                "password",
                "smtp_port",
                "smtp_server",
                "username"
            ],
            "properties": {
                "from_address": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "smtp_port": {
                    "type": "integer"
                },
                "smtp_server": {
                    "type": "string"
                },
                "use_tls": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.UpdateTelegramBotRequest": {
            "type": "object",
            "required": [
                "bot_token"
            ],
            "properties": {
                "bot_token": {
                    "type": "string"
                }
            }
        },
        "api.UserResponse": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.SMTPSettings": {
            "type": "object",
            "properties": {
                "from_address": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "smtp_port": {
                    "type": "integer"
                },
                "smtp_server": {
                    "type": "string"
                },
                "use_tls": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.TelegramBot": {
            "type": "object",
            "properties": {
                "bot_token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyHeader": {
            "type": "apiKey",
            "name": "x-api-key",
            "in": "header"
        },
        "ApiKeyQuery": {
            "type": "apiKey",
            "name": "api_key",
            "in": "query"
        }
    }
}